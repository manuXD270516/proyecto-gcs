name: Scala CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  automation_deploy_gcs:
    runs-on: ubuntu-latest
    services:  
      db_postgresql:
        image: postgres:10.8
        env:
          POSTGRES_PASSWORD: gcs #${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: gcs
          POSTGRES_PORT: 5432
          POSTGRES_DB: gcs
        ports:
          - 5432:5432
          
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        #volumes:
        #  - ds:/sa
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'

    - name: Setup applicaction.conf in gcs-app
      run: | 
        sed -i 's/"localhost:9000"/"localhost:19001","localhost"/g' gcs-app/conf/application.conf
  
    #- name: Run Docker container (postgresql database)
    #  run: |
    #    docker run -t -d -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -e POSTGRES_USER=$POSTGRES_USER -e POSTGRES_DB=$POSTGRES_DB -p 127.0.0.1:5432:5432 #postgres:latest
    - name: Install PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install --yes postgresql-client
    - name: Query database
      run: psql -h localhost -d gcs -U gcs gcs -c 'SELECT 1;'
      env:  
        POSTGRES_HOST: localhost
        PGPASSWORD: gcs #${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_USER: gcs
        POSTGRES_DB: gcs
        PG_IMAGE_NAME: ${{ secrets.PG_IMAGE_NAME }}
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
    
    #- name: Install PostgreSQL client
    #  run: |
    #    apt-get update
    #    apt-get install --yes postgresql-client
    - name: Compile application
      run: sbt compile
    
    # - name: Generate Documentation 
    #   run: sbt doc

    - name: Run units tests
      run: sbt test
   
    - name: Run integrations tests
      run: |
        sbt 'project gcsAppIT' test

    - name: RPM Build of application gcs-app
      run: |
        sbt rpm:packageBin
    
    # - name: SBT action Documentation
    #   id: sbt
    #   uses: lokkju/github-action-sbt@master
    #   with:
    #     commands: doc
    #     sbt_project_directory: ./docs

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:  
        key: ${{ secrets.SECRET_KEY_01 }} 
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy Package to Azure Server (Centos 7)
      run: | 
        rsync -avz /home/runner/work/proyecto-gcs/proyecto-gcs/gcs-app/target/rpm/RPMS/noarch/gcs-app-2.8.x-1.noarch.rpm azureuser@52.170.70.127:/home/azureuser
         rsync -avz /home/runner/work/proyecto-gcs/proyecto-gcs/gcs-app/target/scala-2.13/api/ azureuser@52.170.70.127:/home/azureuser
        ls -a 

    - name: Execte shell script for deployment 
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: azureuser
        key: ${{ secrets.SECRET_KEY_01 }}
        port: 22
        script: |
          sudo systemctl stop gcs-app
          sudo rpm -e gcs-app
          sudo rpm -i gcs-app-2.8.x-1.noarch
          sudo chown -R gcs-app /usr/share/gcs-app/
          sudo chgrp -R gcs-app /usr/share/gcs-app/
          sudo sed -i 's/localhost/10.0.0.5/g' /etc/gcs-app/application.conf
          sudo setsebool -P httpd_can_network_connect on
          sudo systemctl start gcs-app

          cat /var/log/gcs-app/gcs-app.log
    # - name: List secrets keys
    #   run: |
    #     cat /etc/ssh/sshd_config
    #     ls -a ~/.ssh/
    #     cat ~/.ssh/known_hosts
    #     sudo echo "PermitRootLogin no \nPubkeyAuthentication yes \nUsePAM yes" >> /etc/ssh/sshd_config
    #     cat /etc/ssh/sshd_config
        
    # - name: copy file via ssh password
    #   run: |
    #     scp -i ~/.ssh/id_rsa /home/runner/work/proyecto-gcs/proyecto-gcs/gcs-app/target/rpm/RPMS/noarch/gcs-app-2.8.x-1.noarch.rpm azureuser@52.170.70.127:/home/azureuser   
    #   uses: appleboy/scp-action@master
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     username: azureuser
    #     key: ${{ secrets.SECRET_KEY_01 }}
    #     port: 22
    #     source: /home/runner/work/proyecto-gcs/proyecto-gcs/gcs-app/target/rpm/RPMS/noarch/gcs-app-2.8.x-1.noarch.rpm
    #     target: /home/azureuser

        

        
    #- name: Create identity azure file for web server
    #  run: echo "hello world" >> /home/runner/.ssh/id_azure
    #- name: Copy package to server test
    #  run: |
    #    scp -i ~/.ssh/id_azure /home/runner/work/proyecto-gcs/proyecto-gcs/gcs-app/target/rpm/RPMS/noarch/gcs-app-2.8.x-1.noarch.rpm azureuser@52.170.70.127:/home/azureuser    

      
  #build_app:
  #  runs-on: ubuntu-latest
  #  steps:
     
   