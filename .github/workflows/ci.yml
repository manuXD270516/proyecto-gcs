name: Scala CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  setup_enviornment:
    runs-on: ubuntu-latest
    services:  
      db_postgresql:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        #options:
        #  --health-cmd pg_isready
        #  --health-interval 10s
        #  --health-timeout 5s
        #  --health-retries 5
        volumes:
          - ds:/sa
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Run Docker container (postgresql database)
      run: |
        docker run -t -d -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -e POSTGRES_USER=$POSTGRES_USER -e POSTGRES_DB=$POSTGRES_DB -p 127.0.0.1:5432:5432 postgres:latest
      env:  
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        PG_IMAGE_NAME: ${{ secrets.PG_IMAGE_NAME }}

    - name: Compile application
      run: sbt compile
    
    - name: Run units tests
      run: sbt test
   
    - name: Run integrations tests
      run: |
        sbt 'project gcsAppIT' test
  #build_app:
  #  runs-on: ubuntu-latest
  #  steps:
     
   