name: Scala CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  setup_enviornment:
    runs-on: ubuntu-latest
    services:  
      db_postgresql:
        image: postgres:10.8
        env:
          POSTGRES_PASSWORD: gcs #${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: gcs
          POSTGRES_PORT: 5432
          POSTGRES_DB: gcs
        ports:
          - 5432:5432
          
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        #volumes:
        #  - ds:/sa
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Setup applicaction.conf in gcs-app
      run: | 
        sed -i 's/"localhost:9000"/"localhost:19001","localhost"/g' gcs-app/conf/application.conf
  
    #- name: Run Docker container (postgresql database)
    #  run: |
    #    docker run -t -d -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -e POSTGRES_USER=$POSTGRES_USER -e POSTGRES_DB=$POSTGRES_DB -p 127.0.0.1:5432:5432 #postgres:latest
    - name: Install PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install --yes postgresql-client
    - name: Query database
      run: psql -h localhost -d gcs -U gcs gcs -c 'SELECT 1;'
      env:  
        POSTGRES_HOST: localhost
        PGPASSWORD: gcs #${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_USER: gcs
        POSTGRES_DB: gcs
        PG_IMAGE_NAME: ${{ secrets.PG_IMAGE_NAME }}
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
    
    #- name: Install PostgreSQL client
    #  run: |
    #    apt-get update
    #    apt-get install --yes postgresql-client
    - name: Compile application
      run: sbt compile
    
    - name: Run units tests
      run: sbt test
   
    - name: Run integrations tests
      run: |
        sbt 'project gcsAppIT' test
    - name: RPM Build of application gcs-app
      run: |
        sbt rpm:packageBin
  #build_app:
  #  runs-on: ubuntu-latest
  #  steps:
     
   